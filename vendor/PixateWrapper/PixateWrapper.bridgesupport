<?xml version='1.0'?>
<signatures version='1.0'>
<constant name='PXStylesheetDidChangeNotification' const='true' declared_type='NSString*' type='@'/>
<enum name='PXCacheStylesTypeAuto' value='0'/>
<enum name='PXCacheStylesTypeNone' value='1'/>
<enum name='PXLinearGradientDirectionToBottom' value='4'/>
<enum name='PXLinearGradientDirectionToBottomLeft' value='5'/>
<enum name='PXLinearGradientDirectionToBottomRight' value='3'/>
<enum name='PXLinearGradientDirectionToLeft' value='6'/>
<enum name='PXLinearGradientDirectionToRight' value='2'/>
<enum name='PXLinearGradientDirectionToTop' value='0'/>
<enum name='PXLinearGradientDirectionToTopLeft' value='7'/>
<enum name='PXLinearGradientDirectionToTopRight' value='1'/>
<enum name='PXParseErrorDestinationConsole' value='1'/>
<enum name='PXParseErrorDestinationNone' value='0'/>
<enum name='PXStylesheetOriginApplication' value='0'/>
<enum name='PXStylesheetOriginInline' value='3'/>
<enum name='PXStylesheetOriginUser' value='1'/>
<enum name='PXStylesheetOriginView' value='2'/>
<enum name='PXUpdateStylesTypeAuto' value='0'/>
<enum name='PXUpdateStylesTypeManual' value='1'/>
<enum name='kAlignViewPortNone' value='0'/>
<enum name='kAlignViewPortXMaxYMax' value='9'/>
<enum name='kAlignViewPortXMaxYMid' value='8'/>
<enum name='kAlignViewPortXMaxYMin' value='7'/>
<enum name='kAlignViewPortXMidYMax' value='6'/>
<enum name='kAlignViewPortXMidYMid' value='5'/>
<enum name='kAlignViewPortXMidYMin' value='4'/>
<enum name='kAlignViewPortXMinYMax' value='3'/>
<enum name='kAlignViewPortXMinYMid' value='2'/>
<enum name='kAlignViewPortXMinYMin' value='1'/>
<enum name='kCropTypeMeet' value='0'/>
<enum name='kCropTypeSlice' value='1'/>
<enum name='kDimensionTypeCentimeters' value='4'/>
<enum name='kDimensionTypeDegrees' value='9'/>
<enum name='kDimensionTypeDevicePixels' value='3'/>
<enum name='kDimensionTypeEms' value='0'/>
<enum name='kDimensionTypeExs' value='1'/>
<enum name='kDimensionTypeGradians' value='11'/>
<enum name='kDimensionTypeHertz' value='14'/>
<enum name='kDimensionTypeInches' value='6'/>
<enum name='kDimensionTypeKilohertz' value='15'/>
<enum name='kDimensionTypeMillimeters' value='5'/>
<enum name='kDimensionTypeMilliseconds' value='12'/>
<enum name='kDimensionTypePercentage' value='16'/>
<enum name='kDimensionTypePicas' value='8'/>
<enum name='kDimensionTypePixels' value='2'/>
<enum name='kDimensionTypePoints' value='7'/>
<enum name='kDimensionTypeRadians' value='10'/>
<enum name='kDimensionTypeSeconds' value='13'/>
<enum name='kDimensionTypeUserDefined' value='17'/>
<enum name='kStrokeTypeCenter' value='0'/>
<enum name='kStrokeTypeInner' value='1'/>
<enum name='kStrokeTypeOuter' value='2'/>
<class name='NSDictionary'>
<method selector='toCSS'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='animationPropertyHandlers'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='applyFillToPath:withContext:'>
<arg name='path' index='0' declared_type='CGPathRef' type='^{CGPath=}'/>
<arg name='context' index='1' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyInsetToPath:withContext:'>
<arg name='path' index='0' declared_type='CGPathRef' type='^{CGPath=}'/>
<arg name='context' index='1' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyOutsetToPath:withContext:'>
<arg name='path' index='0' declared_type='CGPathRef' type='^{CGPath=}'/>
<arg name='context' index='1' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyStrokeToPath:withContext:'>
<arg name='path' index='0' declared_type='CGPathRef' type='^{CGPath=}'/>
<arg name='context' index='1' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='attributeValueForName:withNamespace:'>
<arg name='name' index='0' declared_type='NSString*' type='@'/>
<arg name='aNamespace' index='1' declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='blendMode'>
<retval declared_type='CGBlendMode' type='i'/>
</method>
<method selector='bounds'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='clippingPath'>
<retval declared_type='PXShape*' type='@'/>
</method>
<method selector='darkenByPercent:'>
<arg name='percent' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='defaultPseudoClass'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fill'>
<retval declared_type='id' type='@'/>
</method>
<method selector='frame'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='isOpaque'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isVirtualControl'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lightenByPercent:'>
<arg name='percent' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='opacity'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='padding'>
<retval declared_type='PXOffsets*' type='@'/>
</method>
<method selector='parent'>
<retval declared_type='id' type='@'/>
</method>
<method selector='pxStyleChildren'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='pxStyleElementName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='pxStyleNamespace'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='pxStyleParent'>
<retval declared_type='id' type='@'/>
</method>
<method selector='registerNotifications'>
<retval declared_type='void' type='v'/>
</method>
<method selector='render:'>
<arg name='context' index='0' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderToImageWithBounds:withOpacity:'>
<arg name='bounds' index='0' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg name='opaque' index='1' declared_type='BOOL' type='B'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='resetStyles'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setBlendMode:'>
<arg name='blendMode' index='0' declared_type='CGBlendMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBounds:'>
<arg name='bounds' index='0' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClippingPath:'>
<arg name='clippingPath' index='0' declared_type='PXShape*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFill:'>
<arg name='fill' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrame:'>
<arg name='frame' index='0' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:'>
<arg name='opacity' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPadding:'>
<arg name='padding' index='0' declared_type='PXOffsets*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParent:'>
<arg name='parent' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadow:'>
<arg name='shadow' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStroke:'>
<arg name='stroke' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyleCSS:'>
<arg name='styleCSS' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyleClass:'>
<arg name='styleClass' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyleId:'>
<arg name='styleId' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTransform:'>
<arg name='transform' index='0' declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVisible:'>
<arg name='visible' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shadow'>
<retval declared_type='id' type='@'/>
</method>
<method selector='stroke'>
<retval declared_type='id' type='@'/>
</method>
<method selector='styleCSS'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='styleClass'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='styleId'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='styleableForPseudoElement:'>
<arg name='pseudoElement' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='supportedPseudoClasses'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='supportedPseudoElements'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='transform'>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}'/>
</method>
<method selector='updateStyles'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateStylesAsync'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateStylesNonRecursively'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateStylesNonRecursivelyAsync'>
<retval declared_type='void' type='v'/>
</method>
<method selector='visible'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='PXArc'>
<method selector='center'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='endingAngle'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='radius'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setCenter:'>
<arg name='center' index='0' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndingAngle:'>
<arg name='endingAngle' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadius:'>
<arg name='radius' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartingAngle:'>
<arg name='startingAngle' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startingAngle'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='PXCircle'>
<method selector='center'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method class_method='true' selector='circleWithCenter:withRadius:'>
<arg name='center' index='0' declared_type='CGPoint' type='{CGPoint=ff}'/>
<arg name='radius' index='1' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initCenter:radius:'>
<arg name='center' index='0' declared_type='CGPoint' type='{CGPoint=ff}'/>
<arg name='radius' index='1' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='radius'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setCenter:'>
<arg name='center' index='0' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadius:'>
<arg name='radius' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXDimension'>
<method selector='degrees'>
<retval declared_type='PXDimension*' type='@'/>
</method>
<method selector='dimension'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='dimensionWithNumber:withDimension:'>
<arg name='number' index='0' declared_type='CGFloat' type='f'/>
<arg name='dimension' index='1' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithNumber:withDimension:'>
<arg name='number' index='0' declared_type='CGFloat' type='f'/>
<arg name='dimension' index='1' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isAngle'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isFrequency'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isLength'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPercentage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isTime'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isUserDefined'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='number'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='points'>
<retval declared_type='PXDimension*' type='@'/>
</method>
<method selector='radians'>
<retval declared_type='PXDimension*' type='@'/>
</method>
<method selector='type'>
<retval declared_type='PXDimensionType' type='i'/>
</method>
</class>
<class name='PXEllipse'>
<method selector='center'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method class_method='true' selector='ellipseWithCenter:withRadiusX:withRadiusY:'>
<arg name='center' index='0' declared_type='CGPoint' type='{CGPoint=ff}'/>
<arg name='radiusX' index='1' declared_type='CGFloat' type='f'/>
<arg name='radiusY' index='2' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initCenter:radiusX:radiusY:'>
<arg name='center' index='0' declared_type='CGPoint' type='{CGPoint=ff}'/>
<arg name='radiusX' index='1' declared_type='CGFloat' type='f'/>
<arg name='radiusY' index='2' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='radiusX'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='radiusY'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setCenter:'>
<arg name='center' index='0' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadiusX:'>
<arg name='radiusX' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadiusY:'>
<arg name='radiusY' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXEngine'>
<method class_method='true' selector='applyStylesheets'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='buildDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method class_method='true' selector='configuration'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='currentApplicationStylesheet'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='currentUserStylesheet'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='currentViewStylesheet'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='licenseEmail'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='licenseKey'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='licenseKey:forUser:'>
<arg name='licenseKey' index='0' declared_type='NSString*' type='@'/>
<arg name='licenseEmail' index='1' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='matchingDeclarationsForStyleable:'>
<arg name='styleable' index='0' declared_type='id' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='matchingRuleSetsForStyleable:'>
<arg name='styleable' index='0' declared_type='id' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='refreshStylesWithOrientationChange'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='selectFromStyleable:usingSelector:'>
<arg name='styleable' index='0' declared_type='id' type='@'/>
<arg name='source' index='1' declared_type='NSString*' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='setRefreshStylesWithOrientationChange:'>
<arg name='value' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='styleSheetFromFilePath:withOrigin:'>
<arg name='filePath' index='0' declared_type='NSString*' type='@'/>
<arg name='origin' index='1' declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='styleSheetFromSource:withOrigin:'>
<arg name='source' index='0' declared_type='NSString*' type='@'/>
<arg name='origin' index='1' declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='titaniumMode'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='updateStyles:'>
<arg name='styleable' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='updateStylesAsync:'>
<arg name='styleable' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='updateStylesNonRecursively:'>
<arg name='styleable' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='updateStylesNonRecursivelyAsync:'>
<arg name='styleable' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='version'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='PXEngineConfiguration'>
<method selector='cacheStylesType'>
<retval declared_type='PXCacheStylesType' type='i'/>
</method>
<method selector='parseErrorDestination'>
<retval declared_type='PXParseErrorDestination' type='i'/>
</method>
<method selector='propertyValueForName:'>
<arg name='name' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='sendParseMessage:'>
<arg name='message' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCacheStylesType:'>
<arg name='cacheStylesType' index='0' declared_type='PXCacheStylesType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParseErrorDestination:'>
<arg name='parseErrorDestination' index='0' declared_type='PXParseErrorDestination' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPropertyValue:forName:'>
<arg name='value' index='0' declared_type='id' type='@'/>
<arg name='name' index='1' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyleClass:'>
<arg name='styleClass' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyleId:'>
<arg name='styleId' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUpdateStylesType:'>
<arg name='updateStylesType' index='0' declared_type='PXUpdateStylesType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='styleClass'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='styleId'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='updateStylesType'>
<retval declared_type='PXUpdateStylesType' type='i'/>
</method>
</class>
<class name='PXGradient'>
<method selector='addColor:'>
<arg name='color' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addColor:withOffset:'>
<arg name='color' index='0' declared_type='id' type='@'/>
<arg name='offset' index='1' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='colors'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='gradient'>
<retval declared_type='CGGradientRef' type='^{CGGradient=}'/>
</method>
<method selector='offsets'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='setColors:'>
<arg name='colors' index='0' declared_type='NSMutableArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOffsets:'>
<arg name='offsets' index='0' declared_type='NSMutableArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTransform:'>
<arg name='transform' index='0' declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='transform'>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}'/>
</method>
</class>
<class name='PXLine'>
<method selector='initX1:y1:x2:y2:'>
<arg name='x1' index='0' declared_type='CGFloat' type='f'/>
<arg name='y1' index='1' declared_type='CGFloat' type='f'/>
<arg name='x2' index='2' declared_type='CGFloat' type='f'/>
<arg name='y2' index='3' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='p1'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='p2'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='setP1:'>
<arg name='p1' index='0' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setP2:'>
<arg name='p2' index='0' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXLinearGradient'>
<method selector='angle'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='cssAngle'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='gradientDirection'>
<retval declared_type='PXLinearGradientDirection' type='i'/>
</method>
<method class_method='true' selector='gradientFromStartColor:endColor:'>
<arg name='startColor' index='0' declared_type='id' type='@'/>
<arg name='endColor' index='1' declared_type='id' type='@'/>
<retval declared_type='PXLinearGradient*' type='@'/>
</method>
<method selector='p1'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='p2'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='psAngle'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setAngle:'>
<arg name='angle' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCssAngle:'>
<arg name='cssAngle' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGradientDirection:'>
<arg name='gradientDirection' index='0' declared_type='PXLinearGradientDirection' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setP1:'>
<arg name='p1' index='0' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setP2:'>
<arg name='p2' index='0' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPsAngle:'>
<arg name='psAngle' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXOffsets'>
<method selector='bottom'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='hasOffset'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithTop:right:bottom:left:'>
<arg name='top' index='0' declared_type='CGFloat' type='f'/>
<arg name='right' index='1' declared_type='CGFloat' type='f'/>
<arg name='bottom' index='2' declared_type='CGFloat' type='f'/>
<arg name='left' index='3' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='left'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='right'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='top'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='PXPaintGroup'>
<method selector='addPaint:'>
<arg name='paint' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXPath'>
<method selector='close'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='createPathFromPathData:'>
<arg name='data' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='PXPath*' type='@'/>
</method>
<method selector='cubicBezierToX1:y1:x2:y2:x3:y3:'>
<arg name='x1' index='0' declared_type='CGFloat' type='f'/>
<arg name='y1' index='1' declared_type='CGFloat' type='f'/>
<arg name='x2' index='2' declared_type='CGFloat' type='f'/>
<arg name='y2' index='3' declared_type='CGFloat' type='f'/>
<arg name='x3' index='4' declared_type='CGFloat' type='f'/>
<arg name='y3' index='5' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='ellipticalArcX:y:radiusX:radiusY:startAngle:endAngle:'>
<arg name='x' index='0' declared_type='CGFloat' type='f'/>
<arg name='y' index='1' declared_type='CGFloat' type='f'/>
<arg name='radiusX' index='2' declared_type='CGFloat' type='f'/>
<arg name='radiusY' index='3' declared_type='CGFloat' type='f'/>
<arg name='startAngle' index='4' declared_type='CGFloat' type='f'/>
<arg name='endAngle' index='5' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='lineToX:y:'>
<arg name='x' index='0' declared_type='CGFloat' type='f'/>
<arg name='y' index='1' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveToX:y:'>
<arg name='x' index='0' declared_type='CGFloat' type='f'/>
<arg name='y' index='1' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='quadraticBezierToX1:y1:x2:y2:'>
<arg name='x1' index='0' declared_type='CGFloat' type='f'/>
<arg name='y1' index='1' declared_type='CGFloat' type='f'/>
<arg name='x2' index='2' declared_type='CGFloat' type='f'/>
<arg name='y2' index='3' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXPolygon'>
<method selector='closed'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithPoints:'>
<arg name='points' index='0' declared_type='NSArray*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='points'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setClosed:'>
<arg name='closed' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPoints:'>
<arg name='points' index='0' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXRadialGradient'>
<method selector='endCenter'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='radius'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setEndCenter:'>
<arg name='endCenter' index='0' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadius:'>
<arg name='radius' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartCenter:'>
<arg name='startCenter' index='0' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startCenter'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
</class>
<class name='PXRectangle'>
<method selector='hasRoundedCorners'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='height'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='initWithRect:'>
<arg name='bounds' index='0' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='radiusBottomLeft'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='radiusBottomRight'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='radiusTopLeft'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='radiusTopRight'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='setCornerRadii:'>
<arg name='radii' index='0' declared_type='CGSize' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCornerRadius:'>
<arg name='radius' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeight:'>
<arg name='height' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadiusBottomLeft:'>
<arg name='radiusBottomLeft' index='0' declared_type='CGSize' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadiusBottomRight:'>
<arg name='radiusBottomRight' index='0' declared_type='CGSize' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadiusTopLeft:'>
<arg name='radiusTopLeft' index='0' declared_type='CGSize' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadiusTopRight:'>
<arg name='radiusTopRight' index='0' declared_type='CGSize' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSize:'>
<arg name='size' index='0' declared_type='CGSize' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidth:'>
<arg name='width' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setX:'>
<arg name='x' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setY:'>
<arg name='y' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='size'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='width'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='x'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='y'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='PXSVGLoader'>
<method selector='addEndSelector:forElement:'>
<arg name='selector' index='0' declared_type='SEL' type=':'/>
<arg name='elementName' index='1' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addShape:'>
<arg name='shape' index='0' declared_type='PXShape*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addStartSelector:forElement:'>
<arg name='selector' index='0' declared_type='SEL' type=':'/>
<arg name='elementName' index='1' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyStyles:forShape:'>
<arg name='attributeDict' index='0' declared_type='NSDictionary*' type='@'/>
<arg name='shape' index='1' declared_type='PXShape*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='loadFromURL:'>
<arg name='URL' index='0' declared_type='NSURL*' type='@'/>
<retval declared_type='PXScene*' type='@'/>
</method>
<method class_method='true' selector='loaderClass'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='numberFromString:'>
<arg name='attributeValue' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='CGFloat' type='f'/>
</method>
<method class_method='true' selector='setLoaderClass:'>
<arg name='class' index='0' declared_type='Class' type='#'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXScene'>
<method selector='addShape:forName:'>
<arg name='shape' index='0' declared_type='id' type='@'/>
<arg name='name' index='1' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bounds'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='parentView'>
<retval declared_type='PXShapeView*' type='@'/>
</method>
<method selector='setBounds:'>
<arg name='bounds' index='0' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParentView:'>
<arg name='parentView' index='0' declared_type='PXShapeView*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShape:'>
<arg name='shape' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shape'>
<retval declared_type='id' type='@'/>
</method>
<method selector='shapeForName:'>
<arg name='name' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='PXShadow'>
<method selector='blendMode'>
<retval declared_type='CGBlendMode' type='i'/>
</method>
<method selector='blurDistance'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='color'>
<retval declared_type='int*' type='^i'/>
</method>
<method selector='horizontalOffset'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='inset'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setBlendMode:'>
<arg name='blendMode' index='0' declared_type='CGBlendMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlurDistance:'>
<arg name='blurDistance' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg name='color' index='0' declared_type='int*' type='^i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHorizontalOffset:'>
<arg name='horizontalOffset' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInset:'>
<arg name='inset' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpreadDistance:'>
<arg name='spreadDistance' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVerticalOffset:'>
<arg name='verticalOffset' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='spreadDistance'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='verticalOffset'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='PXShadowGroup'>
<method selector='addShadowPaint:'>
<arg name='shadow' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='shadows'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='PXShape'>
<method selector='clearPath'>
<retval declared_type='void' type='v'/>
</method>
<method selector='newPath'>
<retval declared_type='CGPathRef' type='^{CGPath=}'/>
</method>
<method selector='owningScene'>
<retval declared_type='PXScene*' type='@'/>
</method>
<method selector='path'>
<retval declared_type='CGPathRef' type='^{CGPath=}'/>
</method>
<method selector='renderChildren:'>
<arg name='context' index='0' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNeedsDisplay'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXShapeGroup'>
<method selector='addShape:'>
<arg name='shape' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='height'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='removeShape:'>
<arg name='shape' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeight:'>
<arg name='height' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewport:'>
<arg name='viewport' index='0' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewportAlignment:'>
<arg name='viewportAlignment' index='0' declared_type='AlignViewPortType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewportCrop:'>
<arg name='viewportCrop' index='0' declared_type='CropType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidth:'>
<arg name='width' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shapeAtIndex:'>
<arg name='index' index='0' declared_type='NSUInteger' type='I'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='shapeCount'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='viewPortTransform'>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}'/>
</method>
<method selector='viewport'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='viewportAlignment'>
<retval declared_type='AlignViewPortType' type='i'/>
</method>
<method selector='viewportCrop'>
<retval declared_type='CropType' type='i'/>
</method>
<method selector='width'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='PXShapeView'>
<method selector='applyBoundsToScene'>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadSceneFromURL:'>
<arg name='URL' index='0' declared_type='NSURL*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderToImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='resourcePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='scene'>
<retval declared_type='PXScene*' type='@'/>
</method>
<method selector='setResourcePath:'>
<arg name='resourcePath' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScene:'>
<arg name='scene' index='0' declared_type='PXScene*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXSolidPaint'>
<method selector='color'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='initWithColor:'>
<arg name='color' index='0' declared_type='UIColor*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='paintWithColor:'>
<arg name='color' index='0' declared_type='UIColor*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setColor:'>
<arg name='color' index='0' declared_type='UIColor*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXStroke'>
<method selector='color'>
<retval declared_type='id' type='@'/>
</method>
<method selector='dashArray'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='dashOffset'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='initWithStrokeWidth:'>
<arg name='width' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='lineCap'>
<retval declared_type='CGLineCap' type='i'/>
</method>
<method selector='lineJoin'>
<retval declared_type='CGLineJoin' type='i'/>
</method>
<method selector='miterLimit'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='newStrokedPath:'>
<arg name='path' index='0' declared_type='CGPathRef' type='^{CGPath=}'/>
<retval declared_type='CGPathRef' type='^{CGPath=}'/>
</method>
<method selector='setColor:'>
<arg name='color' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDashArray:'>
<arg name='dashArray' index='0' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDashOffset:'>
<arg name='dashOffset' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineCap:'>
<arg name='lineCap' index='0' declared_type='CGLineCap' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineJoin:'>
<arg name='lineJoin' index='0' declared_type='CGLineJoin' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMiterLimit:'>
<arg name='miterLimit' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setType:'>
<arg name='type' index='0' declared_type='PXStrokeType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidth:'>
<arg name='width' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='type'>
<retval declared_type='PXStrokeType' type='i'/>
</method>
<method selector='width'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='PXStrokeGroup'>
<method selector='addStroke:'>
<arg name='stroke' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXStrokeStroke'>
<method selector='setStrokeEffect:'>
<arg name='strokeEffect' index='0' declared_type='PXStroke*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStrokeToApply:'>
<arg name='strokeToApply' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='strokeEffect'>
<retval declared_type='PXStroke*' type='@'/>
</method>
<method selector='strokeToApply'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='PXStylesheet'>
<method selector='errors'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='filePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='monitorChanges'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='origin'>
<retval declared_type='PXStylesheetOrigin' type='i'/>
</method>
<method selector='setErrors:'>
<arg name='errors' index='0' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFilePath:'>
<arg name='filePath' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMonitorChanges:'>
<arg name='monitorChanges' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXVector'>
<method selector='add:'>
<arg name='vector' index='0' declared_type='PXVector*' type='@'/>
<retval declared_type='PXVector*' type='@'/>
</method>
<method selector='angle'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='angleBetweenVector:'>
<arg name='vector' index='0' declared_type='PXVector*' type='@'/>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='cross:'>
<arg name='vector' index='0' declared_type='PXVector*' type='@'/>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='divide:'>
<arg name='scalar' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='PXVector*' type='@'/>
</method>
<method selector='dot:'>
<arg name='vector' index='0' declared_type='PXVector*' type='@'/>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='initWithX:Y:'>
<arg name='x' index='0' declared_type='CGFloat' type='f'/>
<arg name='y' index='1' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='length'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='magnitude'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='multiply:'>
<arg name='scalar' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='PXVector*' type='@'/>
</method>
<method selector='perp'>
<retval declared_type='PXVector*' type='@'/>
</method>
<method selector='perpendicular:'>
<arg name='vector' index='0' declared_type='PXVector*' type='@'/>
<retval declared_type='PXVector*' type='@'/>
</method>
<method selector='projectOnto:'>
<arg name='vector' index='0' declared_type='PXVector*' type='@'/>
<retval declared_type='PXVector*' type='@'/>
</method>
<method selector='subtract:'>
<arg name='vector' index='0' declared_type='PXVector*' type='@'/>
<retval declared_type='PXVector*' type='@'/>
</method>
<method selector='unit'>
<retval declared_type='PXVector*' type='@'/>
</method>
<method class_method='true' selector='vectorWithStartPoint:EndPoint:'>
<arg name='p1' index='0' declared_type='CGPoint' type='{CGPoint=ff}'/>
<arg name='p2' index='1' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='vectorWithX:Y:'>
<arg name='x' index='0' declared_type='CGFloat' type='f'/>
<arg name='y' index='1' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='x'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='y'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='PixateWrapper'>
<method class_method='true' selector='watchForStylesheetChanges:'>
<arg name='path' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIBarButtonItem'>
<method selector='pxStyleParent'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setPxStyleParent:'>
<arg name='pxStyleParent' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIColor'>
<method class_method='true' selector='colorFromName:'>
<arg name='name' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='colorWithARGBValue:'>
<arg name='value' index='0' declared_type='uint' type='I'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='colorWithHexString:'>
<arg name='hexString' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='colorWithHexString:withAlpha:'>
<arg name='hexString' index='0' declared_type='NSString*' type='@'/>
<arg name='alpha' index='1' declared_type='CGFloat' type='f'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='colorWithHue:saturation:lightness:'>
<arg name='hue' index='0' declared_type='CGFloat' type='f'/>
<arg name='saturation' index='1' declared_type='CGFloat' type='f'/>
<arg name='lightness' index='2' declared_type='CGFloat' type='f'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='colorWithHue:saturation:lightness:alpha:'>
<arg name='hue' index='0' declared_type='CGFloat' type='f'/>
<arg name='saturation' index='1' declared_type='CGFloat' type='f'/>
<arg name='lightness' index='2' declared_type='CGFloat' type='f'/>
<arg name='alpha' index='3' declared_type='CGFloat' type='f'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='colorWithRGBAValue:'>
<arg name='value' index='0' declared_type='uint' type='I'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='colorWithRGBValue:'>
<arg name='value' index='0' declared_type='uint' type='I'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='darkenByPercent:'>
<arg name='percent' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='getHue:saturation:lightness:alpha:'>
<arg name='hue' index='0' declared_type='CGFloat*' type='^f'/>
<arg name='saturation' index='1' declared_type='CGFloat*' type='^f'/>
<arg name='lightness' index='2' declared_type='CGFloat*' type='^f'/>
<arg name='alpha' index='3' declared_type='CGFloat*' type='^f'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isOpaque'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lightenByPercent:'>
<arg name='percent' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='UIColor*' type='@'/>
</method>
</class>
<class name='UITabBarItem'>
<method selector='pxStyleParent'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setPxStyleParent:'>
<arg name='pxStyleParent' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<informal_protocol name='PXBoundable'>
<method selector='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}8@0:4'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='setBounds:' type='v24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8'>
<arg name='bounds' index='0' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='PXPaint'>
<method selector='applyFillToPath:withContext:' type='v16@0:4^{CGPath=}8^{CGContext=}12'>
<arg name='path' index='0' declared_type='CGPathRef' type='^{CGPath=}'/>
<arg name='context' index='1' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='blendMode' type='i8@0:4'>
<retval declared_type='CGBlendMode' type='i'/>
</method>
<method selector='darkenByPercent:' type='@12@0:4f8'>
<arg name='percent' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isOpaque' type='B8@0:4'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lightenByPercent:' type='@12@0:4f8'>
<arg name='percent' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setBlendMode:' type='v12@0:4i8'>
<arg name='blendMode' index='0' declared_type='CGBlendMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='PXPaintable'>
<method selector='clippingPath' type='@8@0:4'>
<retval declared_type='PXShape*' type='@'/>
</method>
<method selector='fill' type='@8@0:4'>
<retval declared_type='id' type='@'/>
</method>
<method selector='opacity' type='f8@0:4'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setClippingPath:' type='v12@0:4@8'>
<arg name='clippingPath' index='0' declared_type='PXShape*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFill:' type='v12@0:4@8'>
<arg name='fill' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:' type='v12@0:4f8'>
<arg name='opacity' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadow:' type='v12@0:4@8'>
<arg name='shadow' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStroke:' type='v12@0:4@8'>
<arg name='stroke' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVisible:' type='v12@0:4B8'>
<arg name='visible' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shadow' type='@8@0:4'>
<retval declared_type='id' type='@'/>
</method>
<method selector='stroke' type='@8@0:4'>
<retval declared_type='id' type='@'/>
</method>
<method selector='visible' type='B8@0:4'>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='PXRenderable'>
<method selector='padding' type='@8@0:4'>
<retval declared_type='PXOffsets*' type='@'/>
</method>
<method selector='parent' type='@8@0:4'>
<retval declared_type='id' type='@'/>
</method>
<method selector='render:' type='v12@0:4^{CGContext=}8'>
<arg name='context' index='0' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderToImageWithBounds:withOpacity:' type='@28@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8B24'>
<arg name='bounds' index='0' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg name='opaque' index='1' declared_type='BOOL' type='B'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setPadding:' type='v12@0:4@8'>
<arg name='padding' index='0' declared_type='PXOffsets*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParent:' type='v12@0:4@8'>
<arg name='parent' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTransform:' type='v32@0:4{CGAffineTransform=ffffff}8'>
<arg name='transform' index='0' declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='transform' type='{CGAffineTransform=ffffff}8@0:4'>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}'/>
</method>
</informal_protocol>
<informal_protocol name='PXShadowPaint'>
<method selector='applyInsetToPath:withContext:' type='v16@0:4^{CGPath=}8^{CGContext=}12'>
<arg name='path' index='0' declared_type='CGPathRef' type='^{CGPath=}'/>
<arg name='context' index='1' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyOutsetToPath:withContext:' type='v16@0:4^{CGPath=}8^{CGContext=}12'>
<arg name='path' index='0' declared_type='CGPathRef' type='^{CGPath=}'/>
<arg name='context' index='1' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='PXStrokeRenderer'>
<method selector='applyStrokeToPath:withContext:' type='v16@0:4^{CGPath=}8^{CGContext=}12'>
<arg name='path' index='0' declared_type='CGPathRef' type='^{CGPath=}'/>
<arg name='context' index='1' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isOpaque' type='B8@0:4'>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='PXStyleable'>
<method selector='animationPropertyHandlers' type='@8@0:4'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='attributeValueForName:withNamespace:' type='@16@0:4@8@12'>
<arg name='name' index='0' declared_type='NSString*' type='@'/>
<arg name='aNamespace' index='1' declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}8@0:4'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='defaultPseudoClass' type='@8@0:4'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}8@0:4'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='pxStyleChildren' type='@8@0:4'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='pxStyleElementName' type='@8@0:4'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='pxStyleNamespace' type='@8@0:4'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='pxStyleParent' type='@8@0:4'>
<retval declared_type='id' type='@'/>
</method>
<method selector='registerNotifications' type='v8@0:4'>
<retval declared_type='void' type='v'/>
</method>
<method selector='resetStyles' type='@8@0:4'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setBounds:' type='v24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8'>
<arg name='bounds' index='0' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrame:' type='v24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8'>
<arg name='frame' index='0' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyleCSS:' type='v12@0:4@8'>
<arg name='styleCSS' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyleClass:' type='v12@0:4@8'>
<arg name='styleClass' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyleId:' type='v12@0:4@8'>
<arg name='styleId' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='styleCSS' type='@8@0:4'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='styleClass' type='@8@0:4'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='styleId' type='@8@0:4'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='styleableForPseudoElement:' type='@12@0:4@8'>
<arg name='pseudoElement' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='supportedPseudoClasses' type='@8@0:4'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='supportedPseudoElements' type='@8@0:4'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='updateStyles' type='v8@0:4'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateStylesAsync' type='v8@0:4'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateStylesNonRecursively' type='v8@0:4'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateStylesNonRecursivelyAsync' type='v8@0:4'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='PXVirtualControl'>
<method selector='isVirtualControl' type='B8@0:4'>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
</signatures>
